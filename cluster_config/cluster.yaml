# 
# Cluster Config
# 
docker_root_dir: /var/lib/docker
enable_cluster_alerting: false
enable_cluster_monitoring: false
enable_network_policy: false
local_cluster_auth_endpoint:
  enabled: true
name: tsfleet
# 
# Rancher Config
# 
rancher_kubernetes_engine_config:
  addon_job_timeout: 45
  authentication:
    strategy: x509
  dns:
    nodelocal:
      ip_address: ''
      node_selector: null
      update_strategy: {}
  enable_cri_dockerd: false
  ignore_docker_version: true
# 
# # Currently only nginx ingress provider is supported.
# # To disable ingress controller, set `provider: none`
# # To enable ingress on specific nodes, use the node_selector, eg:
#    provider: nginx
#    node_selector:
#      app: ingress
# 
  ingress:
    default_backend: false
    http_port: 0
    https_port: 0
    provider: nginx
  kubernetes_version: v1.21.6-rancher1-2
  monitoring:
    provider: metrics-server
    replicas: 1
# 
#   If you are using calico on AWS
# 
#    network:
#      plugin: calico
#      calico_network_provider:
#        cloud_provider: aws
# 
# # To specify flannel interface
# 
#    network:
#      plugin: flannel
#      flannel_network_provider:
#      iface: eth1
# 
# # To specify flannel interface for canal plugin
# 
#    network:
#      plugin: canal
#      canal_network_provider:
#        iface: eth1
# 
# # CSI - this is needed to install cilium as helm
  network:
    plugin: none
  rotate_encryption_key: false
# 
#    services:
#      kube-api:
#        service_cluster_ip_range: 10.43.0.0/16
#      kube-controller:
#        cluster_cidr: 10.42.0.0/16
#        service_cluster_ip_range: 10.43.0.0/16
#      kubelet:
#        cluster_domain: cluster.local
#        cluster_dns_server: 10.43.0.10
# 
  services:
    etcd:
      backup_config:
        enabled: true
        interval_hours: 12
        retention: 6
        safe_timestamp: false
        timeout: 300
      creation: 12h
      extra_args:
        election-timeout: 5000
        heartbeat-interval: 500
      gid: 0
      retention: 72h
      snapshot: false
      uid: 0
    kube_api:
      always_pull_images: false
      pod_security_policy: false
      secrets_encryption_config:
        enabled: false
      service_node_port_range: 30000-32767
  ssh_agent_auth: false
  upgrade_strategy:
    max_unavailable_controlplane: '1'
    max_unavailable_worker: 10%
    node_drain_input:
      delete_local_data: false
      force: false
      grace_period: -1
      ignore_daemon_sets: true
      timeout: 120
windows_prefered_cluster: false
addons: |-
  ---
  apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: "cilium"
    namespace: kube-system
  ---
  apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: "cilium-operator"
    namespace: kube-system
  ---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: cilium-config
    namespace: kube-system
  data:
    identity-allocation-mode: crd
    cilium-endpoint-gc-interval: "5m0s"
    debug: "false"
    enable-policy: "default"
    enable-ipv4: "true"
    enable-ipv6: "false"
    custom-cni-conf: "false"
    enable-bpf-clock-probe: "true"
    monitor-aggregation: medium
    monitor-aggregation-interval: 5s
    monitor-aggregation-flags: all
    bpf-map-dynamic-size-ratio: "0.0025"
    bpf-policy-map-max: "16384"
    bpf-lb-map-max: "65536"
    bpf-lb-external-clusterip: "false"
    preallocate-bpf-maps: "false"
    sidecar-istio-proxy-image: "cilium/istio_proxy"
    cluster-name: default
    cluster-id: ""
    tunnel: vxlan
    enable-l7-proxy: "true"
    enable-ipv4-masquerade: "true"
    enable-ipv6-masquerade: "true"
    enable-bpf-masquerade: "true"
    enable-xt-socket-fallback: "true"
    install-iptables-rules: "true"
    install-no-conntrack-iptables-rules: "false"
    auto-direct-node-routes: "false"
    enable-bandwidth-manager: "false"
    enable-local-redirect-policy: "false"
    kube-proxy-replacement:  "disabled"
    enable-health-check-nodeport: "true"
    node-port-bind-protection: "true"
    enable-auto-protect-node-port-range: "true"
    enable-session-affinity: "true"
    enable-l2-neigh-discovery: "true"
    enable-endpoint-health-checking: "true"
    enable-health-checking: "true"
    enable-well-known-identities: "false"
    enable-remote-node-identity: "true"
    operator-api-serve-addr: "127.0.0.1:9234"
    enable-hubble: "true"
    hubble-socket-path:  "/var/run/cilium/hubble.sock"
    hubble-listen-address: ":4244"
    hubble-disable-tls: "false"
    hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
    hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
    hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
    ipam: "cluster-pool"
    cluster-pool-ipv4-cidr: "10.0.0.0/8"
    cluster-pool-ipv4-mask-size: "24"
    disable-cnp-status-updates: "true"
    cgroup-root: "/run/cilium/cgroupv2"
  ---
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: cilium
  rules:
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    - services
    - nodes
    - endpoints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/finalizers
    verbs:
    - get
    - list
    - watch
    - update
    - delete
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - list
    - watch
    - update
    - get
  - apiGroups:
    - cilium.io
    resources:
    - ciliumnetworkpolicies
    - ciliumnetworkpolicies/status
    - ciliumnetworkpolicies/finalizers
    - ciliumclusterwidenetworkpolicies
    - ciliumclusterwidenetworkpolicies/status
    - ciliumclusterwidenetworkpolicies/finalizers
    - ciliumendpoints
    - ciliumendpoints/status
    - ciliumendpoints/finalizers
    - ciliumnodes
    - ciliumnodes/status
    - ciliumnodes/finalizers
    - ciliumidentities
    - ciliumidentities/finalizers
    - ciliumlocalredirectpolicies
    - ciliumlocalredirectpolicies/status
    - ciliumlocalredirectpolicies/finalizers
    - ciliumegressnatpolicies
    verbs:
    - '*'
  ---
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: cilium-operator
  rules:
  - apiGroups:
    - ""
    resources:
    # to automatically delete [core|kube]dns pods so that are starting to being
    # managed by Cilium
    - pods
    verbs:
    - get
    - list
    - watch
    - delete
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    # to perform LB IP allocation for BGP
    - services/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    # to perform the translation of a CNP that contains `ToGroup` to its endpoints
    - services
    - endpoints
    # to check apiserver connectivity
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cilium.io
    resources:
    - ciliumnetworkpolicies
    - ciliumnetworkpolicies/status
    - ciliumnetworkpolicies/finalizers
    - ciliumclusterwidenetworkpolicies
    - ciliumclusterwidenetworkpolicies/status
    - ciliumclusterwidenetworkpolicies/finalizers
    - ciliumendpoints
    - ciliumendpoints/status
    - ciliumendpoints/finalizers
    - ciliumnodes
    - ciliumnodes/status
    - ciliumnodes/finalizers
    - ciliumidentities
    - ciliumidentities/status
    - ciliumidentities/finalizers
    - ciliumlocalredirectpolicies
    - ciliumlocalredirectpolicies/status
    - ciliumlocalredirectpolicies/finalizers
    verbs:
    - '*'
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - get
    - list
    - update
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - get
    - update
  ---
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: cilium
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cilium
  subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
  ---
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: cilium-operator
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cilium-operator
  subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
  ---
  apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    labels:
      k8s-app: cilium
    name: cilium
    namespace: kube-system
  spec:
    selector:
      matchLabels:
        k8s-app: cilium
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 2
      type: RollingUpdate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - cilium
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config-dir=/tmp/cilium/config-map
          command:
          - cilium-agent
          startupProbe:
            httpGet:
              host: '127.0.0.1'
              path: /healthz
              port: 9876
              scheme: HTTP
              httpHeaders:
              - name: "brief"
                value: "true"
            failureThreshold: 105
            periodSeconds: 2
            successThreshold: 1
          livenessProbe:
            httpGet:
              host: '127.0.0.1'
              path: /healthz
              port: 9876
              scheme: HTTP
              httpHeaders:
              - name: "brief"
                value: "true"
            failureThreshold: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              host: '127.0.0.1'
              path: /healthz
              port: 9876
              scheme: HTTP
              httpHeaders:
              - name: "brief"
                value: "true"
            failureThreshold: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: "quay.io/cilium/cilium:v1.10.5"
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                - "/cni-install.sh"
                - "--enable-debug=false"
                - "--cni-exclusive=true"
            preStop:
              exec:
                command:
                - /cni-uninstall.sh
          name: cilium-agent
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          volumeMounts:
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/opt/cni/bin
            name: cni-path
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
            # Needed to be able to load kernel modules
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/lib/cilium/tls/hubble
            name: hubble-tls
            readOnly: true
        hostNetwork: true
        initContainers:
        - name: mount-cgroup
          env:
            - name: CGROUP_ROOT
              value: /run/cilium/cgroupv2
            - name: BIN_PATH
              value: /opt/cni/bin
          command:
            - sh
            - -c
            - 'cp /usr/bin/cilium-mount /hostbin/cilium-mount && nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT; rm /hostbin/cilium-mount'
          image: "quay.io/cilium/cilium:v1.10.5"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /hostproc
              name: hostproc
            - mountPath: /hostbin
              name: cni-path
          securityContext:
            privileged: true
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          image: "quay.io/cilium/cilium:v1.10.5"
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          volumeMounts:
          - mountPath: /sys/fs/bpf
            name: bpf-maps
            # Required to mount cgroup filesystem from the host to cilium agent pod
          - mountPath: /run/cilium/cgroupv2
            name: cilium-cgroup
            mountPropagation: HostToContainer
          - mountPath: /var/run/cilium
            name: cilium-run
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
        restartPolicy: Always
        priorityClassName: system-node-critical
        serviceAccount: "cilium"
        serviceAccountName: "cilium"
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /proc
            type: Directory
          name: hostproc
        - hostPath:
            path: /run/cilium/cgroupv2
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path:  /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - configMap:
            name: cilium-config
          name: cilium-config-path
        - name: hubble-tls
          projected:
            sources:
            - secret:
                name: hubble-server-certs
                items:
                  - key: ca.crt
                    path: client-ca.crt
                  - key: tls.crt
                    path: server.crt
                  - key: tls.key
                    path: server.key
                optional: true
  ---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.cilium/app: operator
      name: cilium-operator
    name: cilium-operator
    namespace: kube-system
  spec:
    replicas: 2
    selector:
      matchLabels:
        io.cilium/app: operator
        name: cilium-operator
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
        labels:
          io.cilium/app: operator
          name: cilium-operator
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: io.cilium/app
                  operator: In
                  values:
                  - operator
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config-dir=/tmp/cilium/config-map
          - --debug=$(CILIUM_DEBUG)
          command:
          - cilium-operator-generic
          env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_DEBUG
            valueFrom:
              configMapKeyRef:
                key: debug
                name: cilium-config
                optional: true
          image: "quay.io/cilium/operator-generic:v1.10.5"
          imagePullPolicy: IfNotPresent
          name: cilium-operator
          livenessProbe:
            httpGet:
              host: '127.0.0.1'
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
        hostNetwork: true
        restartPolicy: Always
        priorityClassName: system-cluster-critical
        serviceAccount: "cilium-operator"
        serviceAccountName: "cilium-operator"
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path